Pacman Protocol Specification
Student Number: 20126456
==============================

Terminology
===========

This specification uses the terms MUST, SHOULD, and MAY as defined in RFC 2119 [rfc2119] [1]

This specification also uses the following terminologies to distinguish
between the visting pacman and various game objects:

	- LOCAL: the game object is currently on our local screen
		 and is a local game object
	- AWAY: our pacman is currently away on the remote screen
	- REMOTE: a game object on the remote screen that our AWAY
		  pacman might interact with
	- FOREIGN: the other player's pacman when it is visiting 

The pacman protocol runs over the Transmission Control Protocol (TCP),
using a well known port of 9876. There are twelve message types:

	- MAZE_UPDATE
	- FOREIGN_PACMAN_ARRIVE
	- FOREIGN_PACMAN_LEFT
	- FOREIGN_PACMAN_DIED
	- PACMAN_GO_HOME
	- PACMAN_UPDATE
	- GHOST_UPDATE
	- FOREIGN_PACMAN_ATE_GHOST
	- EAT
	- SCORE_UPDATE
	- LIVES_UPDATE
	- STATUS_UPDATE

When the game starts, a successful connection will be established between
the player's computer and their opponent's computer. When the connection has
been established, a MAZE_UPDATE message, containing a copy of the maze which
includes the location of all food and powerpills, MUST be sent to both players.
This is to ensure that the players are able to see their own maze as well as
their opponent's maze. Mazes MAY be chosen by inserting '-m' in the command line
at the start of the game. A random maze will be assigned if no maze is chosen.

Every time a player's pacman is moving, be it LOCAL or AWAY, their local computer
MUST send a PACMAN_UPDATE message to the remote computer. The remote computer
receives this and uses it to update your opponent's screen with the display of the
player's pacman.

If the AWAY pacman is forcibly sent home, a PACMAN_GO_HOME message MUST be sent to
the local computer to reset the player's pacman to LOCAL.

When a FOREIGN pacman crosses the tunnel to enter the LOCAL maze, a
FOREIGN_PACMAN_ARRIVE message MUST be sent to the local computer. When the FOREIGN
pacman leaves the LOCAL maze through the tunnel and returns to the REMOTE maze, a
FOREIGN_PACMAN_LEFT message MUST be sent to the local computer. If the FOREIGN pacman
dies in the LOCAL maze, a FOREIGN_PACMAN_DIED message MUST be sent to the local computer.

Whenever a ghost moves or changes state, a GHOST_UPDATE message MUST be sent to both
the player and the opponent. This enables us to view REMOTE ghosts on the local computer.
If a FOREIGN pacman eats a LOCAL ghost, a FOREIGN_PACMAN_ATE_GHOST message must be sent.

The LOCAL game board also has states associated with it. These states are defined under
the class GameMode in pa_model.py. A STATUS_UPDATE message is only sent when there are
changes between these states. There are six states:

	- STARTUP
	- CHASE
	- FRIGHTEN
	- GAME_OVER
	- NEXT_LEVEL_WAIT
	- READY_TO_RESTART

The software is in the STARTUP state while playing the startup jingle. The gameplay has two
states: CHASE and FRIGHTEN. The CHASE state is the default gameplay state where the pacman is
being chased by the ghosts. When the pacman eats a powerpill, the FRIGHTEN gameplay state is
used instead, where the pacman chases the ghosts. When either player runs out of lives, the
game ends. The losing player's computer goes to GAME_OVER state and sends a status update
message. The other player also moves into a GAME_OVER state. Under the GAME_OVER state, if the
restart button "r" is pressed by the local player, the local computer goes to READY_TO_RESTART
state and sends an update message. The game only restarts when the second player also presses
"r", sending a replying READY_TO_RESTART status update. When a level is cleared on a screen,
the screen's system goes to NEXT_LEVEL_WAIT while playing the jingle and waiting for the player
to get ready. 


Message Contents
================
The contents of a MAZE_UPDATE message are:

 - Type: MAZE_UPDATE

 - Value: maze (including locations of all the food and powerpills).


The contents of a FOREIGN_PACMAN_ARRIVE message are:

 - Type: FOREIGN_PACMAN_ARRIVE

 - Message: There are 2 possible messages that can be sent and the protocol assumes that pacman
	    has left LOCAL maze = 0 and pacman has entered LOCAL maze = 1.


The contents of a FOREIGN_PACMAN_LEFT message are:

 - Type: FOREIGN_PACMAN_LEFT

 - Message: There are 2 possible messages that can be sent and the protocol assumes that pacman
	    becomes LOCAL = 0 and pacman remains AWAY = 1.


The contents of a FOREIGN_PACMAN_DIED message are:

 - Type: FOREIGN_PACMAN_DIED

 - Message: There are 2 possible messages that can be sent and the protocol assumes that AWAY
	    pacman is eaten = 0 and AWAY pacman is alive = 1.


The contents of a PACMAN_GO_HOME message are:

 - Type: PACMAN_GO_HOME

 - Message: There are 2 possible messages that can be sent and the protocol assumes that AWAY
	    pacman must be resetted to LOCAL = 0 and AWAY pacman does not need to be resetted = 1.


The contents of a PACMAN_UPDATE message are:

 - Type: PACMAN_UPDATE

 - Position: X, Y position of the pacman. X is distance along the screen from 0 to 1024 as the
	     pacman moves from left to right from the point of view of player 1. 0 is player 1's
	     end of the maze. Y is the distance down the screen from 0 to 1024, where 0 is the top
	     of player 1's screen and 1024 is the bottom.

 - Direction: The direction of the pacman can be chosen from 4 directions where the protocol
	      assumes that UP = 0, LEFT = 1, RIGHT = 2 and DOWN = 3.

 - Speed: The speed of the pacman remains constant at 80 pixels per second, which is roughly 10
	  tiles per second. The protocol assumes that STATIC = 0 and MOVING = 1.


The contents of a GHOST_UPDATE message are:

 - Type: GHOST_UPDATE

 - Position: X, Y position of the ghost. X is distance along the screen from 0 to 1024 as the
	     pacman moves from left to right from the point of view of player 1. 0 is player 1's
	     end of the maze. Y is the distance down the screen from 0 to 1024, where 0 is the top
	     of player 1's screen and 1024 is the bottom.

 - Direction: The direction of the ghost SHOULD vary between 4 directions where the protocol
	      assumes that UP = 0, LEFT = 1, RIGHT = 2 and DOWN = 3.

 - Speed: The speed of the ghost 

 - Mode: There are 4 distinct modes of ghost movements, where the protocol assumes that CHASE = 0, 
	 SCATTER = 1, FRIGHTENED = 2 and EYES = 3.


The contents of a FOREIGN_PACMAN_ATE_GHOST message are:

 - Type: FOREIGN_PACMAN_ATE_GHOST

 - Number: The number of ghosts alive. This value SHOULD range from 0 to 4.


The contents of a EAT message are:

 - Type: EAT

 - Position: X, Y position of the food. X is distance along the screen from 0 to 1024 as the
	     pacman moves from left to right from the point of view of player 1. 0 is player 1's
	     end of the maze. Y is the distance down the screen from 0 to 1024, where 0 is the top
	     of player 1's screen and 1024 is the bottom.

 - Pacman: The type of pacman  that consumes the food, where the protocol assumes that FOREIGN = 0
	   and LOCAL = 1.

 - Food: The type of food which is consumed by the pacman, where the protocol assumes that
	 Normal = 0 and Powerpill = 1.


The contents of a SCORE_UPDATE message are:

 - Type: SCORE_UPDATE

 - Local: Score for LOCAL pacman. The score SHOULD range from 0 to 2,147,483,647.

 - Foreign: Score for FOREIGN pacman. The score SHOULD range from 0 to 2,147,483,647.
 

The contents of a LIVES_UPDATE message are:

 - Type: LIVES_UPDATE

 - Local: Lives remaining for LOCAL pacman. The value SHOULD range from 0 to 4.

 - Foreign: Lives remaining for FOREIGN pacman. The value SHOULD range from 0 to 4.
 

The contents of a STATUS_UPDATE message are:

 - Type: STATUS_UPDATE

 - Status: The state of the gameboard can be vary between 6 different states where the protocol
	   assumes that STARTUP = 0, CHASE = 1, FRIGHTEN = 2, GAME_OVER = 3, NEXT_LEVEL_WAIT = 4
	   and READY_TO_RESTART = 5.


Message Timing
==============

While both the pacmans and ghosts are moving, PACMAN_UPDATE and GHOST_UPDATE messages SHOULD be
sent every 20ms, as this is the typical reaction time of a human [1]. If a computer cannot
maintain 50 frames per second, PACMAN_UPDATE and GHOST_UPDATE messages MAY be sent once per frame, as
it is unreasonable to update the remote computer more often than the local one.

A MAZE_UPDATE message SHOULD only be sent once when a connection is established with the client
or server.

SCORE_UPDATE, STATUS_UPDATE AND LIVES_UPDATE MESSAGES SHOULD be sent every 16.7ms, which can be
translated to 60 frames per second (fps). This is because the frequency of frame refresh is
typically 60fps.

FOREIGN_PACMAN_ARRIVE, FOREIGN_PACMAN_LEFT, FOREIGN_PACMAN_DIED, PACMAN_GO_HOME, EAT and
FOREIGN_PACMAN_ATE_GHOST messages SHOULD only be sent when specified situations occur. The
respective messages will only be sent when the following situations occur:

	- FOREIGN_PACMAN_ARRIVE and FOREIGN_PACMAN_LEFT messages SHOULD be sent when the
	  FOREIGN pacman enters the local screen and leaves the remote screen, and when the 
	  FOREIGN pacman leaves the local screen and re-enters the remote screen.

	- FOREIGN_PACMAN_DIED message SHOULD be sent when the FOREIGN pacman dies on the local
	  screen.

	- PACMAN_GO_HOME message SHOULD be sent when the AWAY pacman dies on a remote screen
	  and needs to be delivered "home" to their local screen, and be resetted back to LOCAL.

	- EAT message SHOULD be sent when the pacman, be it LOCAL or FOREIGN, consumes any food
	  on the gameboard.

	- FOREIGN_PACMAN_ATE_GHOST message SHOULD be sent when the FOREIGN pacman eats a LOCAL
	  ghost.


Message Encoding
================

The twelve messages mentioned above are fixed format, binary encoded, with all integer fields
sent in network byte order (i.e. big endian order) [1]. Due to the message type being fixed
forward, no explicit length field is required.

More than one message MAY be sent consecutively in a single packet - this may be useful to reduce
overhead when sending both GHOST_UPDATE and PACMAN_UPDATE messages, as well as the SCORE_UPDATE,
LIVES_UPDATE and STATUS_UPDATE messages [1].


MAZE_UPDATE message format
-------------------------

BAT_UPDATE messages consist of two bytes, encoded as follows:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | T | unused|    Bat Position   |         Bat Velocity          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Fields:

 - T: 4 bit type field.  Type=MAZE_UPDATE has decimal value 0 (binary value of 0000).

 - unused: 4 bits, not used, but needed to maintain byte alignment.
   MUST be set to zero in this version of the protocol.

 - Bat Position: 10 bits, giving an unsigned integer in big-endian
   byte order.

 - Bat Velocity: 16 bits, giving a signed twos-complement integer in
   big-endian byte order.


FOREIGN_PACMAN_ARRIVE message format
-------------------------------------

FOREIGN_PACMAN_ARRIVE messages consist of one byte, encoded as follows:

    0                   
    0 1 2 3 4 5 6 7 8 9 
   +-+-+-+-+-+-+-+-+-+-+
   |   T   |M|  unused |
   +-+-+-+-+-+-+-+-+-+-+

Fields:

 - T: 4 bits type field. Type=FOREIGN_PACMAN_ARRIVE has decimal value 1 (binary value of 0001).

 - M (Message): 1 bit number field which indicates the presence of a FOREIGN pacman in a local
	        screen, giving an unsigned integer in big-endian byte order.

 - unused: 5 bits, not used, but needed to maintain byte alignment. MUST be set to zero in this
	   version of the protocol.


FOREIGN_PACMAN_LEFT message format
-----------------------------------

FOREIGN_PACMAN_LEFT messages consist of one byte, encoded as follows:

    0                   
    0 1 2 3 4 5 6 7 8 9 
   +-+-+-+-+-+-+-+-+-+-+
   |   T   |M|  unused |
   +-+-+-+-+-+-+-+-+-+-+

Fields:

 - T: 4 bits type field. Type=FOREIGN_PACMAN_ARRIVE has decimal value 2 (binary value of 0010).

 - M (Message): 1 bit number field which indicates if a FOREIGN pacman has left a local
	        screen, giving an unsigned integer in big-endian byte order.

 - unused: 5 bits, not used, but needed to maintain byte alignment. MUST be set to zero in this
	   version of the protocol.


FOREIGN_PACMAN_DIED message format
-----------------------------------

FOREIGN_PACMAN_DIED messages consist of one byte, encoded as follows:

    0                   
    0 1 2 3 4 5 6 7 8 9 
   +-+-+-+-+-+-+-+-+-+-+
   |   T   |M|  unused |
   +-+-+-+-+-+-+-+-+-+-+

Fields:

 - T: 4 bits type field. Type=FOREIGN_PACMAN_ARRIVE has decimal value 3 (binary value of 0011).

 - M (Message): 1 bit number field which indicates if a FOREIGN pacman has died on a local
	        screen, giving an unsigned integer in big-endian byte order.

 - unused: 5 bits, not used, but needed to maintain byte alignment. MUST be set to zero in this
	   version of the protocol.


PACMAN_GO_HOME message format
------------------------------

PACMAN_GO_HOME messages consist of one byte, encoded as follows:

    0                   
    0 1 2 3 4 5 6 7 8 9 
   +-+-+-+-+-+-+-+-+-+-+
   |   T   |M|  unused |
   +-+-+-+-+-+-+-+-+-+-+

Fields:

 - T: 4 bits type field. Type=PACMAN_GO_HOME has decimal value 4 (binary value of 0100).

 - M (Message): 1 bit number field which indicates if an AWAY pacman has died on a remote
	        screen and needs to return "home" to the local screen, giving an unsigned integer
		in big-endian byte order.

 - unused: 5 bits, not used, but needed to maintain byte alignment. MUST be set to zero in this
	   version of the protocol.


PACMAN_UPDATE message format
--------------------------

PACMAN_UPDATE messages consist of three bytes, encodes as follows:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   T   |     X Position    |     Y Position    |  U  |  D  | S |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Fields:

 - T: 4 bits type field. Type=PACMAN_UPDATE has decimal value 5 (binary value of 0101).

 - X Position, Y Position: 10 bits number field which indicates the x and y position of the LOCAL
			   ghost respectively, giving an unsigned integer in big-endian byte order.

 - D (Direction): 3 bits number field which indicates the direction of the pacman, giving an
		  unsigned integer in big-endian byte order.

 - S (Speed): 2 bits number field which indicates if the pacman is static or moving, giving an
	      unsigned integer in big-endian byte order.

 - U (Unused): 3 bits, not used, but needed to maintain byte alignment. MUST be set to zero
	       in this version of the protocol.


GHOST_UPDATE message format
----------------------------

GHOST_UPDATE messages consist of three bytes, encoded as follows:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   T   |     X Position    |   unused1     |     Y Position    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  D  |     X Position    |     Y Position    | unused| P |  M  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Fields:

 - T: 4 bits type field. Type=GHOST_UPDATE has decimal value 6 (binary value of 0110).

 - X Position, Y Position: 10 bits number field which indicates the x and y position of the LOCAL
			   ghost respectively, giving an unsigned integer in big-endian byte order.

 - D (Direction): 3 bits number field which indicates the direction of the ghost, giving an
		  unsigned integer in big-endian byte order.

 - S (Speed): 3 bits 

 - M (Mode): 3 bits number field which indicates the mode of ghost movements, giving an unsigned
	     integer in big-endian byte order.

 - unused1: 8 bits, not used, but needed to maintain byte alignment. MUST be set to zero in this
	    version of the protocol.


FOREIGN_PACMAN_ATE_GHOST message format
----------------------------------------

FOREIGN_PACMAN_ATE_GHOST messages consist of one byte, encoded as follows:

    0                   
    0 1 2 3 4 5 6 7 8 9 
   +-+-+-+-+-+-+-+-+-+-+
   |   T   |  U  |  N  |
   +-+-+-+-+-+-+-+-+-+-+

Fields:

 - T: 4 bits type field. Type=FOREIGN_PACMAN_ATE_GHOST has decimal value 7 (binary value of 0111).

 - N (Number of ghosts alive): 3 bit number field which indicates the number of LOCAL ghosts that
			       are alive, giving an unsigned integer in big-endian byte order.

 - U (unused): 3 bits, not used, but needed to maintain byte alignment. MUST be set to zero in this
	       version of the protocol.


EAT message format
-------------------

EAT messages consist of three bytes, encoded as follows:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   T   |     X Position    |     Y Position    | unused| P | F |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Fields:

 - T: 4 bits type field. Type=EAT has decimal value 8 (binary value of 1000).

 - X Position, Y Position: 10 bits number field which indicates the x and y position of the food
			   respectively, giving an unsigned integer in big-endian byte order.

 - P (Pacman): 2 bit number field which indicates if the pacman is a LOCAL or FOREIGN pacman,
	       giving an unsigned integer in big-endian byte order.

 - F (Food): 2 bit number field which indicates if the food eaten by the pacman, be it LOCAL or
	     FOREIGN, is a powerpill or not, giving an unsigned integer in big-endian byte order.

 - unused: 4 bits, not used, but needed to maintain byte alignment. MUST be set to zero in this
	   version of the protocol.


SCORE_UPDATE message format
-----------------------------------

SCORE_UPDATE messages consist of three bytes, encoded as follows:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   T   |                       unused                          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                      LOCAL pacman Score                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     FOREIGN pacman Score                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Fields:

 - T: 4 bits type field. Type=SCORE_UPDATE has decimal value 9 (binary value of 1001).

 - LOCAL pacman score: 32 bit number field which indicates the score of the LOCAL pacman, giving
		       an unsigned integer in big-endian byte order.

 - FOREIGN pacman score: 32 bit number field which indicates the score of the FOREIGN pacman,
			 giving an unsigned integer in big-endian byte order.

 - unused: 28 bits, not used, but needed to maintain byte alignment. MUST be set to zero in this
	   version of the protocol.


LIVES_UPDATE message format
-----------------------------------

LIVES_UPDATE messages consist of one byte, encoded as follows:

    0                   
    0 1 2 3 4 5 6 7 8 9 
   +-+-+-+-+-+-+-+-+-+-+
   |   T   |  L  |  F  |
   +-+-+-+-+-+-+-+-+-+-+

Fields:

 - T: 4 bits type field. Type=FOREIGN_PACMAN_ARRIVE has decimal value 11 (binary value of 1011).

 - L (Local): 3 bit number field which indicates the number of lives left for a LOCAL pacman,
	      giving an unsigned integer in big-endian byte order.

 - F (FOREIGN): 3 bit number field which indicates the number of lives left for a FOREIGN pacman,
	        giving an unsigned integer in big-endian byte order.


STATUS_UPDATE message format
-----------------------------

STATUS_UPDATE messages consist of one byte, encoded as follows:

    0                   
    0 1 2 3 4 5 6 7 8 9 
   +-+-+-+-+-+-+-+-+-+-+
   |   T   |M|  unused |
   +-+-+-+-+-+-+-+-+-+-+

Fields:

 - T: 4 bits type field. Type=STATUS_UPDATE has decimal value 11 (binary value of 1011).

 - M (Message): 1 bit number field which indicates the status of the game board, giving an
		unsigned integer in big-endian byte order.

 - unused: 5 bits, not used, but needed to maintain byte alignment. MUST be set to zero in this
	   version of the protocol.


References
==========
[1] M.Handly (2020) 'Pong v1 Protocol Specification' from 
https://github.com/mhandley/ENGF2-2020/blob/master/video15-pong/pong_v1.txt
(Accessed: 10 December 2020)